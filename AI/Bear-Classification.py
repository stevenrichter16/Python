# -*- coding: utf-8 -*-
"""100bears.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZyTtUp6Ocgt-FxbTXM2IfvLAKvKgaEW_
"""

!curl -s https://course.fast.ai/setup/colab | bash
!pip install --upgrade fastai

from fastai.vision import *
from fastai.metrics import error_rate

bs = 32

from google.colab import drive 
drive.mount('/content/drive', force_remount=True)
drive = "/content/drive/My Drive"

path = '/content/drive/My Drive/ML/bears'; path

fnames = get_image_files(path)
fnames[0]

np.random.seed(2)
pat = re.compile(r'/([^/]+)_\d+.jpg$')

path

data = ImageDataBunch.from_name_re(path, fnames, pat, ds_tfms=get_transforms(), size=224, bs=bs
                                  ).normalize(imagenet_stats)

data.show_batch(rows=3, figsize=(7,6))

print(data.classes)
len(data.classes),data.c

learn = create_cnn(data, models.resnet34, metrics=error_rate)

learn.model

learn.fit_one_cycle(4)

learn.save('grizzly_black_polar_teddy-98')

interp = ClassificationInterpretation.from_learner(learn)

losses,idxs = interp.top_losses()

len(data.valid_ds)==len(losses)==len(idxs)

interp.plot_confusion_matrix(figsize=(12,12), dpi=60)

interp.most_confused(min_val=0)

learn.unfreeze()

learn.fit_one_cycle(1)

learn.save('bear-98')

learn.load('grizzly_black_polar_teddy-98')

learn.lr_find()

learn.recorder.plot()

learn.unfreeze()

learn.fit_one_cycle(2, max_lr=slice(1e-4,1e-3))

!cp '/content/drive/My Drive/ML/bears/test/black_test.jpg' '/content/test.jpg'

learn.data

img = open_image('/content/test.jpg')

learn.predict(img)